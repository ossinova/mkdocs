{"config":{"lang":["en"],"separator":"[\\s\\-]+","pipeline":["stopWordFilter"]},"docs":[{"location":"","title":"Welcome!","text":"<p>This is a demo of the power of MKDocs. MkDocs is a fast, simple and downright gorgeous static site generator that's geared towards building project documentation. Documentation source files are written in Markdown, and configured with a single YAML configuration file.</p>"},{"location":"#getting-started","title":"Getting started!","text":"<ul> <li>Read MKDocs documentation</li> </ul> <p>If you want to use this repo as your base then clone it and install poetry. </p> <ul> <li>Create a poetry virtual env</li> </ul> <pre><code>poetry env use python3.9\n</code></pre> <ul> <li>Install dependencies</li> </ul> <pre><code>poetry install --with mkdocs\n</code></pre> <ul> <li>Serve locally</li> </ul> <pre><code>poetry run mkdocs serve\n</code></pre>"},{"location":"#automated-documentation-using-mkdocs_gen_files","title":"Automated documentation using mkdocs_gen_files","text":"<p>Read the documentation here: MKDocstring</p>"},{"location":"reference/dataframe_functions/","title":"<code class=\"doc-symbol doc-symbol-nav doc-symbol-module\"></code> dataframe_functions","text":"<p>This module contains helper functions for the example package.</p>"},{"location":"reference/dataframe_functions/#functions.dataframe_functions.is_column_present","title":"is_column_present","text":"<pre><code>is_column_present(column)\n</code></pre> <p>A function that checks if a column is present in a dataframe</p> <p>Parameters:</p> Name Type Description Default <code>column</code> <code>str</code> <p>The column to check</p> required <p>Returns:</p> Type Description <code>bool</code> <p>True if the column is present, False otherwise</p> Source code in <code>src/functions/dataframe_functions.py</code> <pre><code>def is_column_present(column: str) -&gt; bool:\n\"\"\"A function that checks if a column is present in a dataframe\n\n    Arguments:\n        column: The column to check\n    Returns:\n        True if the column is present, False otherwise\n\n    \"\"\"\n    return True\n</code></pre>"},{"location":"reference/helper_functions/","title":"<code class=\"doc-symbol doc-symbol-nav doc-symbol-module\"></code> helper_functions","text":"<p>This module contains helper functions for the example package.</p>"},{"location":"reference/helper_functions/#functions.helper_functions.sum","title":"sum","text":"<pre><code>sum(a, b)\n</code></pre> <p>A function that adds two numbers</p> <p>Parameters:</p> Name Type Description Default <code>a</code> <code>int</code> <p>The first number</p> required <code>b</code> <code>int</code> <p>The second number</p> required <p>Returns:</p> Type Description <code>int</code> <p>The sum of the two numbers</p> Source code in <code>src/functions/helper_functions.py</code> <pre><code>def sum(a: int, b: int) -&gt; int:\n\"\"\"A function that adds two numbers\n    Arguments:\n        a: The first number\n        b: The second number\n    Returns:\n        The sum of the two numbers\n    \"\"\"\n    return a + b\n</code></pre>"},{"location":"reference/helper_functions/#functions.helper_functions.sumB","title":"sumB","text":"<pre><code>sumB(a, b)\n</code></pre> <p>A function that adds two numbers</p> <p>Parameters:</p> Name Type Description Default <code>a</code> <code>int</code> <p>The first number</p> required <code>b</code> <code>int</code> <p>The second number</p> required <p>Returns:</p> Type Description <code>int</code> <p>The sum of the two numbers</p> Source code in <code>src/functions/helper_functions.py</code> <pre><code>def sumB(a: int, b: int) -&gt; int:\n\"\"\"A function that adds two numbers\n    Arguments:\n        a: The first number\n        b: The second number\n    Returns:\n        The sum of the two numbers\n    \"\"\"\n    return a + b\n</code></pre>"},{"location":"reference/helper_functions/#functions.helper_functions.sumC","title":"sumC","text":"<pre><code>sumC(a, b)\n</code></pre> <p>A function that adds two numbers</p> <p>Parameters:</p> Name Type Description Default <code>a</code> <code>int</code> <p>The first number</p> required <code>b</code> <code>int</code> <p>The second number</p> required <p>Returns:</p> Type Description <code>int</code> <p>The sum of the two numbers</p> Source code in <code>src/functions/helper_functions.py</code> <pre><code>def sumC(a: int, b: int) -&gt; int:\n\"\"\"A function that adds two numbers\n    Arguments:\n        a: The first number\n        b: The second number\n    Returns:\n        The sum of the two numbers\n    \"\"\"\n    return a + b\n</code></pre>"}]}